name: CI-CD-FoodAPI

# Event on which the workflow triggers
on:
  workflow_dispatch:

# Variabelen die toegankelijk zijn voor alle jobs
env:
  SOLUTION_PATH: ./Food.Service/FoodAPI.sln
  DOCKERFILE_PATH: ./Food.Service/FoodAPI/dockerfile
    
jobs:
 #1. Static Code Check
  codeql-analysis:
    name: static-code checking
    runs-on: ubuntu-latest
    strategy:
      # -GitHub cancelt alle in-progress jobs als matrix in job faalt-
      fail-fast: true
      matrix:
        language: [ 'csharp' ]

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Init CodeQL
        uses: github/codeql-action/init@v1
        # -Gebruikt de bovenstaande matrix om taal te selecteren voor checking-
        with:
          languages: ${{ matrix.language }}

      - name: Autobuild
        uses: github/codeql-action/autobuild@v1

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v1

        #2. Testing
  unit-and-integration-tests:
    name: testing solution
    runs-on: ubuntu-latest
    needs: codeql-analysis

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
        
      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with: 
          dotnet-version: 5.0.x
          
      - name: Restore Dependencies
        run: dotnet restore ${{ env.SOLUTION_PATH }}
          
      - name: Build Solution
        run: dotnet build --no-restore ${{ env.SOLUTION_PATH }}

      - name: Run tests
        run: dotnet test --no-build --verbosity normal ${{ env.SOLUTION_PATH }}

  build-docker-container:
    name: docker build
    runs-on: ubuntu-latest
    needs: unit-and-integration-tests
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v1
        
      - name: Build and Push Docker image
        uses: docker/build-push-action@v1
        with:
          dockerfile: ${{ env.DOCKERFILE_PATH }}
          repository: rakker93/s3-poc-microservice/foodcontainer
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          registry: docker.pkg.github.com
          tags: latest, ${{ github.run_number }}
